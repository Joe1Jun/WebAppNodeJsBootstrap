<!-- design inspired by https://www.nueko.de/-->
<!--the main container is styles in css   -->

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH"
      crossorigin="anonymous"
    />
    <link
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"
      rel="stylesheet"
    />
    <link rel="stylesheet" href="/style.css" />
    <script src="/app.js"></script>
    <title>Cart</title>
  </head>
  <body>
    <%- include('navbar') %>

    <div style="height: 200px"></div>
    <div class="text-center" style="height: 100px">
      <h1>Cart</h1>
    </div>
    <div class="container" id="checkout-main-container">
      <div id="cart-items-container">
        <!-- Cart items will be dynamically populated here by JavaScript -->
      </div>
    </div>

    <!-- Main container for checkout button -->
    <div class="container text-center mt-4">
      <form action="/checkout" method="get">
        <button type="submit" class="mb-4 btn btn-primary">Checkout</button>
      </form>
    </div>

    <%- include('footer') %>

    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
      crossorigin="anonymous"
    ></script>

    <script>
      window.onload = function () {
        const cart = JSON.parse(localStorage.getItem("cart")) || [];
        const cartItemsContainer = document.getElementById(
          "cart-items-container"
        );

        if (cart.length === 0) {
          cartItemsContainer.innerHTML =
            ' <div class="container text-center"><h2>Cart is Empty<h2/></div>';
        } else {
          cart.forEach((product) => {
            const productHTML = `
  <div class="row mb-4" id="product-${product.Id}">
    <!-- Product Image Section -->
    <div class="col-6">
      <div class="container text-center">
        <img
           src="/images/shop2Images/${product.image}"
           alt="${product.name}"
           class="img-fluid mb-3 product-image rounded-3"
        />
      </div>
    </div>
    <!-- Product Description Section -->
    <div class="col-6 mt-4">
      <div class="text-container">
        <div class="text-center">
          <h5 class="mb-4">${product.name}</h5>
          <p class="mb-4" style="font-size: 1.2rem">${product.description}</p>
          <p class="mb-4">â‚¬${product.price}</p>
          
          <input type="hidden" value="${product.Id}" name="id" /> 
          <input type="submit"  value="-" onclick="decreaseQuantity('${
            product.Id
          }')" />
          <input type="text"  name="quantity" id="quantity-${
            product.Id
          }" value="${product.quantity}" readonly />
          <input type="submit"  value="+" onclick="increaseQuantity('${
            product.Id
          }')" />
        
          <!-- Remove from Cart Button -->
          <div class="text-center">
            <button type="button" class="btn btn-danger mt-3" onclick="removeFromCart('${
              product.Id
            }')"> 
              Remove
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
  <br/>
  <div class="text-center">
    <h3>Total: ${product.price * product.quantity}</h3> </div>
`;

            cartItemsContainer.innerHTML += productHTML;
          });
        }
      };

      function increaseQuantity(productId) {
        let cart = JSON.parse(localStorage.getItem("cart")) || [];

        // Loop through the cart and find the product by Id
        for (let i = 0; i < cart.length; i++) {
          if (cart[i].Id === productId) {
            cart[i].quantity++;
            // Update the quantity in the DOM
            document.querySelector(`#quantity-${productId}`).value =
              cart[i].quantity;
            break;
          }
        }

        // Save the updated cart back to localStorage
        localStorage.setItem("cart", JSON.stringify(cart));
        // Update the cart count in the navbar
        updateCartCount();
      }

      function decreaseQuantity(productId) {
        let cart = JSON.parse(localStorage.getItem("cart")) || [];
        for (let i = 0; i < cart.length; i++) {
          if (cart[i].Id === productId) {
            cart[i].quantity--;
            if (cart[i].quantity <= 0) {
              removeFromCart(productId);
              return;
            } else {
              // Update the quantity in the DOM
              document.querySelector(`#quantity-${productId}`).value =
                cart[i].quantity;
            }
            break;
          }
        }

        // Save the updated cart back to localStorage
        localStorage.setItem("cart", JSON.stringify(cart));
        // Update the cart count in the navbar
        updateCartCount();
      }

      function removeFromCart(productId) {
        let cart = JSON.parse(localStorage.getItem("cart")) || [];
        cart = cart.filter((product) => product.Id !== productId);
        localStorage.setItem("cart", JSON.stringify(cart));

        // Remove the product from the DOM
        const productElement = document.querySelector(`#product-${productId}`);
        if (productElement) {
          productElement.remove();
        }
        // Update the cart count in the navbar
        updateCartCount();
      }
    </script>
  </body>
</html>
